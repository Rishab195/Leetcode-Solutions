1380. Lucky Numbers in a Matrix
Given an m x n matrix of distinct numbers, return all lucky numbers in the matrix in any order.

A lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column.

Example 1:

Input: matrix = [[3,7,8],[9,11,13],[15,16,17]]
Output: [15]
Explanation: 15 is the only lucky number since it is the minimum in its row and the maximum in its column.
Example 2:

Input: matrix = [[1,10,4,2],[9,3,8,7],[15,16,17,12]]
Output: [12]
Explanation: 12 is the only lucky number since it is the minimum in its row and the maximum in its column.
Example 3:

Input: matrix = [[7,8],[1,2]]
Output: [7]
Explanation: 7 is the only lucky number since it is the minimum in its row and the maximum in its column.
                    SOLUTION
              _________________________
class Solution {
    public List<Integer> luckyNumbers (int[][] matrix) {
        int rows=matrix.length;
        int cols=matrix[0].length;
        List<Integer>ans=new ArrayList<>();
        for(int i=0;i<rows;i++){
            int rowMin=Integer.MAX_VALUE;
            int rowMinIndex=-1;
            for(int j=0;j<cols;j++){
                if(matrix[i][j]<rowMin){
                    rowMin=matrix[i][j];
                    rowMinIndex=j;
                }
            }
            boolean isLucky=true;
            for(int k=0;k<rows;k++){
                if(matrix[k][rowMinIndex]>rowMin){
                isLucky=false;
                break;

                }
            }
        if(isLucky)
        {
            ans.add(rowMin);
        }
        }
        
       return ans; 
    }
}
