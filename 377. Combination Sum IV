377. Combination Sum IV
Given an array of distinct integers nums and a target integer target, return the number of possible combinations that add up to target.

The test cases are generated so that the answer can fit in a 32-bit integer.
Example 1:

Input: nums = [1,2,3], target = 4
Output: 7
Explanation:
The possible combination ways are:
(1, 1, 1, 1)
(1, 1, 2)
(1, 2, 1)
(1, 3)
(2, 1, 1)
(2, 2)
(3, 1)
Note that different sequences are counted as different combinations.
Example 2:

Input: nums = [9], target = 3
Output: 0
SOLUTION
___________________________________
class Solution {
    int solveMem(int[] nums,int target,int[] dp)
    {
        //Base case
        if(target<0)
            return 0;
        if(target==0)
            return 1;
            if(dp[target]!=-1)
            {
                return dp[target];
            }
        int ans=0;
        for(int i=0;i<nums.length;i++)
        {
            ans+=solveMem(nums,target-nums[i],dp);
        }
        dp[target]=ans;
        return dp[target];
    }
    public int combinationSum4(int[] nums, int target) {
        
        // return solve(nums,target);
        int[] dp=new int[target+1];
        Arrays.fill(dp,-1);
        return solveMem(nums,target,dp);
    }
}
